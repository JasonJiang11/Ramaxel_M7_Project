// This file has been automatically generated by the pattern compiler.
// DO NOT EDIT!

#ifndef MAGNUM7
#define MAGNUM7
#endif 

#define PATCOM_OUTPUT
#include "tester.h"
#include "SinglePlaneErase_MAG7.h"

#ifndef PATTERN_INSTRUCTION
#error PATTERN_INSTRUCTION not #defined ("tester.h" should not have "#pragma once").
#endif



/************ pattern "SUB__POLL_TBERS" ************/

PATTERN_INITIAL_CONDITIONS( SUB__POLL_TBERS )   /* C Code to set initial conditions */
{
}

PATTERN_INSTRUCTIONS( SUB__POLL_TBERS )   /* Microcode */
{
	/* 0 */
	PATTERN_INSTRUCTION(0x00C0018C,0x00640100,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x00400196,0x00410400,0x00004010,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x000002D8,0x00010000,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x00000318,0x00400100,0x00004040,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x00000318,0x00418400,0x00004010,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x0000030C,0x00000100,0x00006000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x01800198,0x00618400,0x00004010,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x0000030C,0x00001100,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x090F090F,0x090F090F,0x00140680,0x14028000,0x01800000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x090F090F,0x090F090F,0x00100680,0x14020000,0x00400000,0x00000000)
	PATTERN_INSTRUCTION(0x02000189,0x00610700,0x01404010,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x02C0012C,0x00040D00,0x01404000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	/* 10 */
	PATTERN_INSTRUCTION(0x01C00196,0x00400400,0x00004010,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x000002D8,0x00000000,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
}

PATTERN_LABELS( SUB__POLL_TBERS )   /* List of all labels with their associated microinstructions */
{
	PATTERN_LABEL( 0, "RB_or_loop" )
	PATTERN_LABEL( 1, "Wait_tBERS" )
	PATTERN_LABEL( 2, "LoopDone" )
	PATTERN_LABEL( 3, "InitCnt" )
	PATTERN_LABEL( 5, "Reset_err" )
	PATTERN_LABEL( 6, "Pipeline0" )
	PATTERN_LABEL( 7, "PollRB" )
	PATTERN_LABEL( 8, "Pipeline" )
	PATTERN_LABEL( 9, "error_eval" )
	PATTERN_LABEL( 10, "time_eval" )
	PATTERN_LABEL( 11, "SubDone" )
}

PATTERN_MAR_RELOC_UINSTS( SUB__POLL_TBERS )   /* Microinstructions that need MAR address relocated */
{
	PATTERN_MAR_RELOC_UINST( 0 )
	PATTERN_MAR_RELOC_UINST( 1 )
	PATTERN_MAR_RELOC_UINST( 6 )
	PATTERN_MAR_RELOC_UINST( 8 )
	PATTERN_MAR_RELOC_UINST( 9 )
	PATTERN_MAR_RELOC_UINST( 10 )
}

PATTERN_MAR_FUNCB_UINSTS( SUB__POLL_TBERS )   /* Instructions requiring MAR_FUNCB fixup */
{
	PATTERN_MAR_FUNCB_UINST( 0, SUB__POLL_TBERS, 3 )
	PATTERN_MAR_FUNCB_UINST( 1, SUB__POLL_TBERS, 1 )
	PATTERN_MAR_FUNCB_UINST( 6, SUB__POLL_TBERS, 6 )
	PATTERN_MAR_FUNCB_UINST( 8, SUB__POLL_TBERS, 8 )
	PATTERN_MAR_FUNCB_UINST( 9, SUB__POLL_TBERS, 11 )
	PATTERN_MAR_FUNCB_UINST( 10, SUB__POLL_TBERS, 7 )
	PATTERN_MAR_FUNCB_UINST( 3, SUB__POLL_TBERS, -1 )
	PATTERN_MAR_FUNCB_UINST( 4, SUB__POLL_TBERS, -1 )
}

PATTERN_COUNTER_UINSTS( SUB__POLL_TBERS )   /* Instructions requiring Counter func/addr fixup */
{
	PATTERN_COUNTER_UINST( 0, SUB__POLL_TBERS, 3 )
	PATTERN_COUNTER_UINST( 1, SUB__POLL_TBERS, 1 )
	PATTERN_COUNTER_UINST( 3, SUB__POLL_TBERS, -1 )
	PATTERN_COUNTER_UINST( 4, SUB__POLL_TBERS, -1 )
	PATTERN_COUNTER_UINST( 6, SUB__POLL_TBERS, 6 )
	PATTERN_COUNTER_UINST( 8, SUB__POLL_TBERS, 8 )
	PATTERN_COUNTER_UINST( 9, SUB__POLL_TBERS, 11 )
	PATTERN_COUNTER_UINST( 10, SUB__POLL_TBERS, 7 )
}

PATTERN_VERSIONS( SUB__POLL_TBERS )   /* Version of the compiler output */
{
	PATTERN_VERSION( PATTERN_VAR_GOSUB, 1 )
}

PATTERN_USED_TSETS( SUB__POLL_TBERS )   /* TSETS used by this pattern */
{
#ifdef INCLUDE_HD7
	PATTERN_USED_TSET( enTSETNumberMag7::t_TSET1 )
	PATTERN_USED_TSET( enTSETNumberMag7::t_TSET10 )
	PATTERN_USED_TSET( enTSETNumberMag7::t_TSET17 )
#endif
}

PATTERN_USED_VIHHS( SUB__POLL_TBERS )   /* VIHH used by this pattern */
{
	PATTERN_USED_VIHH( VIHH1 )
}

PATTERN_ATTRIBUTES( SUB__POLL_TBERS )   /* Pattern attributes */
{
	PATTERN_ATTRIBUTE( MEM )
	PATTERN_ATTRIBUTE( SINGLE )
}

PATTERN_HW_REQUIREMENTS( SUB__POLL_TBERS )   /* Hardware requirements */
{
	PATTERN_HW_REQUIREMENT( mag, 7 )
}

PATTERN( SUB__POLL_TBERS )   /* Process the pattern specific information */
{
	INITIAL_CONDITIONS( SUB__POLL_TBERS )
	INSTRUCTIONS( SUB__POLL_TBERS )
	LABELS( SUB__POLL_TBERS )
	MAR_RELOC_UINSTS( SUB__POLL_TBERS )
	MAR_FUNCB_UINSTS( SUB__POLL_TBERS )
	COUNTER_UINSTS( SUB__POLL_TBERS )
	VERSIONS( SUB__POLL_TBERS )
	USED_TSETS( SUB__POLL_TBERS )
	USED_VIHHS( SUB__POLL_TBERS )
	ATTRIBUTES( SUB__POLL_TBERS )
	HW_REQUIREMENTS( SUB__POLL_TBERS )
}



/************ pattern "PAT__EraseOneBlock_SinglePlane" ************/

PATTERN_INITIAL_CONDITIONS( PAT__EraseOneBlock_SinglePlane )   /* C Code to set initial conditions */
{
count(2, 0);
}

PATTERN_INSTRUCTIONS( PAT__EraseOneBlock_SinglePlane )   /* Microcode */
{
	/* 0 */
	PATTERN_INSTRUCTION(0x0000030D,0x00000000,0x00006000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x010001B8,0x00813000,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x0000030C,0x00000100,0x00004000,0x000000DA,0x00DA0000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x510F510F,0x510F510F,0x00000680,0x12025000,0x00200000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x510F510F,0x510F510F,0x00000680,0x14020000,0x00200000,0x00000000)
	PATTERN_INSTRUCTION(0x00C00198,0x004C0400,0x00004010,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x00000318,0x00000000,0x00004000,0x00000060,0x00600000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00810D13,0x00000D10,0x00000D10,0x510F510F,0x510F510F,0x00000680,0x12025011,0x00200000,0x00000000,0x00810D13,0x00000D10,0x00000D10,0x510F510F,0x510F510F,0x00000680,0x14020011,0x00200000,0x00000000)
	PATTERN_INSTRUCTION(0x00000318,0x00000000,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x18025800,0x00E00000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x18020000,0x00E00000,0x00000000)
	PATTERN_INSTRUCTION(0x00000318,0x00000000,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x18025800,0x01000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x18020000,0x01000000,0x00000000)
	PATTERN_INSTRUCTION(0x00000318,0x00002000,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x18025800,0x01200000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x18020000,0x01200000,0x00000000)
	PATTERN_INSTRUCTION(0x0000030C,0x00000100,0x00004000,0x000000D0,0x00D00000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x510F510F,0x510F510F,0x00000680,0x12025000,0x00200000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x510F510F,0x510F510F,0x00000680,0x14020000,0x00200000,0x00000000)
	PATTERN_INSTRUCTION(0x02400186,0x00080400,0x00004010,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	/* 10 */
	PATTERN_INSTRUCTION(0x00002CCE,0x00000000,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x02C001D8,0x00000000,0x00004400,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00100680,0x14024800,0x00000000,0x00000000)
}

PATTERN_LABELS( PAT__EraseOneBlock_SinglePlane )   /* List of all labels with their associated microinstructions */
{
	PATTERN_LABEL( 0, "AssertCEn" )
	PATTERN_LABEL( 2, "Send0xDA" )
	PATTERN_LABEL( 3, "Wait_tSLC" )
	PATTERN_LABEL( 4, "Send0x60" )
	PATTERN_LABEL( 5, "ADDR3" )
	PATTERN_LABEL( 6, "ADDR4" )
	PATTERN_LABEL( 7, "ADDR5" )
	PATTERN_LABEL( 8, "Send0xD0" )
	PATTERN_LABEL( 9, "Wait_tWB_D0" )
	PATTERN_LABEL( 10, "Wait_tBERS" )
	PATTERN_LABEL( 11, "End" )
}

PATTERN_MAR_RELOC_UINSTS( PAT__EraseOneBlock_SinglePlane )   /* Microinstructions that need MAR address relocated */
{
	PATTERN_MAR_RELOC_UINST( 1 )
	PATTERN_MAR_RELOC_UINST( 3 )
	PATTERN_MAR_RELOC_UINST( 9 )
	PATTERN_MAR_RELOC_UINST( 10 )
	PATTERN_MAR_RELOC_UINST( 11 )
}

PATTERN_GOSUB_UINSTS( PAT__EraseOneBlock_SinglePlane )   /* Microinstructions that call other patterns */
{
	PATTERN_GOSUB_UINST( 10, SUB__POLL_TBERS )
}

PATTERN_MAR_FUNCB_UINSTS( PAT__EraseOneBlock_SinglePlane )   /* Instructions requiring MAR_FUNCB fixup */
{
	PATTERN_MAR_FUNCB_UINST( 11, PAT__EraseOneBlock_SinglePlane, 11 )
	PATTERN_MAR_FUNCB_UINST( 1, PAT__EraseOneBlock_SinglePlane, 4 )
	PATTERN_MAR_FUNCB_UINST( 3, PAT__EraseOneBlock_SinglePlane, 3 )
	PATTERN_MAR_FUNCB_UINST( 9, PAT__EraseOneBlock_SinglePlane, 9 )
	PATTERN_MAR_FUNCB_UINST( 10, SUB__POLL_TBERS, 0 )
}

PATTERN_COUNTER_UINSTS( PAT__EraseOneBlock_SinglePlane )   /* Instructions requiring Counter func/addr fixup */
{
	PATTERN_COUNTER_UINST( 1, PAT__EraseOneBlock_SinglePlane, 4 )
	PATTERN_COUNTER_UINST( 3, PAT__EraseOneBlock_SinglePlane, 3 )
	PATTERN_COUNTER_UINST( 9, PAT__EraseOneBlock_SinglePlane, 9 )
}

PATTERN_VERSIONS( PAT__EraseOneBlock_SinglePlane )   /* Version of the compiler output */
{
	PATTERN_VERSION( PATTERN_VAR_GOSUB, 1 )
}

PATTERN_USED_TSETS( PAT__EraseOneBlock_SinglePlane )   /* TSETS used by this pattern */
{
#ifdef INCLUDE_HD7
	PATTERN_USED_TSET( enTSETNumberMag7::t_TSET1 )
	PATTERN_USED_TSET( enTSETNumberMag7::t_TSET10 )
	PATTERN_USED_TSET( enTSETNumberMag7::t_TSET11 )
	PATTERN_USED_TSET( enTSETNumberMag7::t_TSET12 )
#endif
}

PATTERN_USED_VIHHS( PAT__EraseOneBlock_SinglePlane )   /* VIHH used by this pattern */
{
	PATTERN_USED_VIHH( VIHH1 )
}

PATTERN_ATTRIBUTES( PAT__EraseOneBlock_SinglePlane )   /* Pattern attributes */
{
	PATTERN_ATTRIBUTE( MEM )
	PATTERN_ATTRIBUTE( SINGLE )
}

PATTERN_HW_REQUIREMENTS( PAT__EraseOneBlock_SinglePlane )   /* Hardware requirements */
{
	PATTERN_HW_REQUIREMENT( mag, 7 )
}

PATTERN( PAT__EraseOneBlock_SinglePlane )   /* Process the pattern specific information */
{
	INITIAL_CONDITIONS( PAT__EraseOneBlock_SinglePlane )
	INSTRUCTIONS( PAT__EraseOneBlock_SinglePlane )
	LABELS( PAT__EraseOneBlock_SinglePlane )
	MAR_RELOC_UINSTS( PAT__EraseOneBlock_SinglePlane )
	GOSUB_UINSTS( PAT__EraseOneBlock_SinglePlane )
	MAR_FUNCB_UINSTS( PAT__EraseOneBlock_SinglePlane )
	COUNTER_UINSTS( PAT__EraseOneBlock_SinglePlane )
	VERSIONS( PAT__EraseOneBlock_SinglePlane )
	USED_TSETS( PAT__EraseOneBlock_SinglePlane )
	USED_VIHHS( PAT__EraseOneBlock_SinglePlane )
	ATTRIBUTES( PAT__EraseOneBlock_SinglePlane )
	HW_REQUIREMENTS( PAT__EraseOneBlock_SinglePlane )
}
