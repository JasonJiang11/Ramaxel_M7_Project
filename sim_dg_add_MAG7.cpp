// This file has been automatically generated by the pattern compiler.
// DO NOT EDIT!

#ifndef MAGNUM7
#define MAGNUM7
#endif 

#define PATCOM_OUTPUT
#include "tester.h"
#include "sim_dg_add_MAG7.h"

#ifndef PATTERN_INSTRUCTION
#error PATTERN_INSTRUCTION not #defined ("tester.h" should not have "#pragma once").
#endif



/************ pattern "PAT__SIM_DG_ADD" ************/

PATTERN_INITIAL_CONDITIONS( PAT__SIM_DG_ADD )   /* C Code to set initial conditions */
{
}

PATTERN_INSTRUCTIONS( PAT__SIM_DG_ADD )   /* Microcode */
{
	/* 0 */
	PATTERN_INSTRUCTION(0x0000030C,0x00000100,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x00000000,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x00400198,0x00000400,0x00004010,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x0A040A04,0x0A040A04,0x00000680,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x0A040A04,0x0A040A04,0x00000680,0x00000000,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x00000F0E,0x00000000,0x00004000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x00000000,0x00000000,0x00000000)
	PATTERN_INSTRUCTION(0x00C001D8,0x00000000,0x00004400,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x00000000,0x00000000,0x00000000,0x00000D10,0x00000D10,0x00000D10,0x01100110,0x01100110,0x00000680,0x00000000,0x00000000,0x00000000)
}

PATTERN_LABELS( PAT__SIM_DG_ADD )   /* List of all labels with their associated microinstructions */
{
	PATTERN_LABEL( 0, "MAR_1" )
	PATTERN_LABEL( 1, "MAR_2" )
	PATTERN_LABEL( 2, "MAR_3" )
	PATTERN_LABEL( 3, "MAR_DONE" )
}

PATTERN_MAR_RELOC_UINSTS( PAT__SIM_DG_ADD )   /* Microinstructions that need MAR address relocated */
{
	PATTERN_MAR_RELOC_UINST( 1 )
	PATTERN_MAR_RELOC_UINST( 3 )
}

PATTERN_MAR_FUNCB_UINSTS( PAT__SIM_DG_ADD )   /* Instructions requiring MAR_FUNCB fixup */
{
	PATTERN_MAR_FUNCB_UINST( 3, PAT__SIM_DG_ADD, 3 )
	PATTERN_MAR_FUNCB_UINST( 1, PAT__SIM_DG_ADD, 1 )
}

PATTERN_COUNTER_UINSTS( PAT__SIM_DG_ADD )   /* Instructions requiring Counter func/addr fixup */
{
	PATTERN_COUNTER_UINST( 1, PAT__SIM_DG_ADD, 1 )
}

PATTERN_VERSIONS( PAT__SIM_DG_ADD )   /* Version of the compiler output */
{
	PATTERN_VERSION( PATTERN_VAR_GOSUB, 1 )
}

PATTERN_USED_TSETS( PAT__SIM_DG_ADD )   /* TSETS used by this pattern */
{
#ifdef INCLUDE_HD7
	PATTERN_USED_TSET( enTSETNumberMag7::t_TSET1 )
#endif
}

PATTERN_USED_VIHHS( PAT__SIM_DG_ADD )   /* VIHH used by this pattern */
{
	PATTERN_USED_VIHH( VIHH1 )
}

PATTERN_ATTRIBUTES( PAT__SIM_DG_ADD )   /* Pattern attributes */
{
	PATTERN_ATTRIBUTE( MEM )
	PATTERN_ATTRIBUTE( SINGLE )
}

PATTERN_HW_REQUIREMENTS( PAT__SIM_DG_ADD )   /* Hardware requirements */
{
	PATTERN_HW_REQUIREMENT( mag, 7 )
}

PATTERN( PAT__SIM_DG_ADD )   /* Process the pattern specific information */
{
	INITIAL_CONDITIONS( PAT__SIM_DG_ADD )
	INSTRUCTIONS( PAT__SIM_DG_ADD )
	LABELS( PAT__SIM_DG_ADD )
	MAR_RELOC_UINSTS( PAT__SIM_DG_ADD )
	MAR_FUNCB_UINSTS( PAT__SIM_DG_ADD )
	COUNTER_UINSTS( PAT__SIM_DG_ADD )
	VERSIONS( PAT__SIM_DG_ADD )
	USED_TSETS( PAT__SIM_DG_ADD )
	USED_VIHHS( PAT__SIM_DG_ADD )
	ATTRIBUTES( PAT__SIM_DG_ADD )
	HW_REQUIREMENTS( PAT__SIM_DG_ADD )
}
